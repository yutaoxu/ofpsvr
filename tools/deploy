#!/usr/bin/env ruby

# OF P.S.V.R
# Copyright (C) 2009-2015  P.S.V.R
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Deploy
# ---------
# Called by the after_success script of `.travis.yml`,
# uploading the nightly tarball onto CDN.
# 
# It assumes that,
# * Variable TRAVIS_BUILD_DIR has been set
# * Variable SENSITIVE_QINIU_AK has been set
# * Variable SENSITIVE_QINIU_SK has been set
# * Variable QRSYNC might have been set
# * Folder tmp/nightly contains the nightly tarball

require 'fileutils'
require 'json'
require 'shellwords'

FileUtils.mkdir_p "#{ENV['TRAVIS_BUILD_DIR']}/tmp"
if ENV['QRSYNC']
  qrsync = ENV['QRSYNC']
else
  qrsync = Shellwords.escape "#{ENV['TRAVIS_BUILD_DIR']}/tools/qrsync"  
end

# puts '---------------------------'
# puts '# 1. Upload nightly binary'
# File.open("#{ENV['TRAVIS_BUILD_DIR']}/tmp/nightly.json", "w") do |f|
#   h = {}
#
#   # ● 本地源目录路径
#   # 是本地需要同步上传目录的完整的绝对路径。
#   # 这个目录中的所有内容会被同步到指定的 bucket 中。
#   # 注意：Windows 平台上路径的表示格式为：盘符:/目录，
#   # 比如 E 盘下的目录 data 表示为：e:/data 。
#   h[:src] = "#{ENV['TRAVIS_BUILD_DIR']}/tmp/nightly"
#
#   h[:dest] = "qiniu:access_key=#{ENV['SENSITIVE_QINIU_AK']}"
#   h[:dest] += "&secret_key=#{ENV['SENSITIVE_QINIU_SK']}"
#   h[:dest] += "&bucket=ofpsvr"
#   h[:dest] += "&key_prefix=nightly/"
#
#   # ● 是否同步删除七牛云上的文件
#   # 通常设置0，当本地文件删除时并不删除存储在七牛的对应文件。
#   # 如果你想删除本地文件的同时也删除存储在存储在七牛的文件,则设置为1。
#   h[:deletable] = 0
#
#   # ● 日志输出等级
#   # 通常设置1，只输出必要的日志。
#   # 当上传过程发生问题时，设置为0可以得到详细日志。
#   h[:debug_level] = 0
#
#   f.puts(h.to_json)
# end
#
# arg = Shellwords.escape "#{ENV['TRAVIS_BUILD_DIR']}/tmp/nightly.json"
# puts `#{qrsync} #{arg}`

puts '---------------------------'
puts '2. Upload public assets'
File.open("#{ENV['TRAVIS_BUILD_DIR']}/tmp/assets.json", "w") do |f|
  h = {}

  # ● 本地源目录路径
  # 是本地需要同步上传目录的完整的绝对路径。
  # 这个目录中的所有内容会被同步到指定的 bucket 中。
  # 注意：Windows 平台上路径的表示格式为：盘符:/目录，
  # 比如 E 盘下的目录 data 表示为：e:/data 。
  h[:src] = "#{ENV['TRAVIS_BUILD_DIR']}/public"

  h[:dest] = "qiniu:access_key=#{ENV['SENSITIVE_QINIU_AK']}"
  h[:dest] += "&secret_key=#{ENV['SENSITIVE_QINIU_SK']}"
  h[:dest] += "&bucket=ofpsvr"
  h[:dest] += "&key_prefix=890202/"

  # ● 是否同步删除七牛云上的文件
  # 通常设置0，当本地文件删除时并不删除存储在七牛的对应文件。
  # 如果你想删除本地文件的同时也删除存储在存储在七牛的文件,则设置为1。
  h[:deletable] = 0

  # ● 日志输出等级
  # 通常设置1，只输出必要的日志。
  # 当上传过程发生问题时，设置为0可以得到详细日志。
  h[:debug_level] = 0

  f.puts(h.to_json)
end
arg = Shellwords.escape "#{ENV['TRAVIS_BUILD_DIR']}/tmp/assets.json"
puts `#{qrsync} #{arg}`

# puts '---------------------------'
# puts '3. deploy'
# # TODO
